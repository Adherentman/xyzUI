{"remainingRequest":"/Users/xuzihao/project/xyzUI/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"targets\":{\"browsers\":[\"last 2 versions\",\"Firefox ESR\",\"> 1%\",\"ie >= 9\",\"iOS >= 8\",\"Android >= 4\"]}}],\"@babel/preset-react\",[\"/Users/xuzihao/project/xyzUI/node_modules/docz/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"emotion\",\"@babel/plugin-proposal-object-rest-spread\",\"react-hot-loader/babel\",[\"/Users/xuzihao/project/xyzUI/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/xuzihao/project/xyzUI/node_modules/docz/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.jsx","dependencies":[{"path":"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.jsx","mtime":1541515586497},{"path":"/Users/xuzihao/project/xyzUI/node_modules/cache-loader/dist/cjs.js","mtime":1541425449339},{"path":"/Users/xuzihao/project/xyzUI/node_modules/babel-loader/lib/index.js","mtime":1541425435946}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.jsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { typographyStyle } from '../styles/style'; // 首字母大写\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar Typography = function Typography(_ref) {\n  var _classNames;\n\n  var children = _ref.children,\n      Component = _ref.component,\n      size = _ref.size,\n      align = _ref.align,\n      noWarp = _ref.noWarp,\n      other = _objectWithoutProperties(_ref, [\"children\", \"component\", \"size\", \"align\", \"noWarp\"]);\n\n  var typographyStyles = classNames(typographyStyle.typographyFont, (_classNames = {}, _defineProperty(_classNames, typographyStyle[\"size\".concat(capitalize(size))], size !== ''), _defineProperty(_classNames, typographyStyle[\"tx\".concat(capitalize(align))], align !== 'inherit'), _defineProperty(_classNames, typographyStyle.noWarp, noWarp), _classNames));\n  return React.createElement(Component, Object.assign({\n    className: typographyStyles\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), children);\n};\n\nTypography.defaultProps = {\n  component: 'p',\n  size: '',\n  align: 'inherit'\n};\nTypography.propTypes = {\n  /**\n  * The content of the component.\n  */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]),\n\n  /**\n  * Applies the theme typography styles.\n  */\n  size: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'title', 'body', 'button']),\n\n  /**\n  * Set the text-align on the component.\n  */\n  align: PropTypes.oneOf(['inherit', 'center', 'left', 'right', 'justify']),\n\n  /**\n  * If true, the text will not wrap, but instead will truncate with an ellipsis.\n  */\n  noWarp: PropTypes.bool\n};\nvar _default = Typography;\nvar _default2 = _default;\nexport default _default2;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(capitalize, \"capitalize\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.jsx\");\n  reactHotLoader.register(Typography, \"Typography\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.jsx\");\n  leaveModule(module);\n})();\n\n;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(capitalize, \"capitalize\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.jsx\");\n  reactHotLoader.register(Typography, \"Typography\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.jsx\");\n  reactHotLoader.register(_default2, \"default\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.jsx\");\n  leaveModule(module);\n})();\n\n;\nTypography.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Typography\",\n  \"props\": {\n    \"component\": {\n      \"defaultValue\": {\n        \"value\": \"'p'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"func\"\n        }, {\n          \"name\": \"object\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"The component used for the root node.\\nEither a string to use a DOM element or a component.\\nBy default, it maps the variant to a good default headline component.\"\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'h1'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'h2'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'h3'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'h4'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'h5'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'h6'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'title'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'body'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'button'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Applies the theme typography styles.\"\n    },\n    \"align\": {\n      \"defaultValue\": {\n        \"value\": \"'inherit'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'inherit'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'center'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'left'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'right'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'justify'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Set the text-align on the component.\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"The content of the component.\"\n    },\n    \"noWarp\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"If true, the text will not wrap, but instead will truncate with an ellipsis.\"\n    }\n  }\n};",{"version":3,"sources":["/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.jsx"],"names":["React","PropTypes","classNames","typographyStyle","capitalize","str","charAt","toUpperCase","slice","Typography","children","Component","component","size","align","noWarp","other","typographyStyles","typographyFont","defaultProps","propTypes","node","oneOfType","string","func","object","oneOf","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,QAAgC,iBAAhC,C,CAEA;;AACA,SAASC,UAAT,CAAqBC,GAArB,EAA0B;AACxB,SAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,KAAJ,CAAU,CAAV,CAArC;AACD;;AAED,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAOb;AAAA;;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALOC,SAKP,QALJC,SAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,gBAAgB,GAAGf,UAAU,CAACC,eAAe,CAACe,cAAjB,kDAChCf,eAAe,eAAQC,UAAU,CAACS,IAAD,CAAlB,EADiB,EACaA,IAAI,KAAK,EADtB,gCAEhCV,eAAe,aAAMC,UAAU,CAACU,KAAD,CAAhB,EAFiB,EAEYA,KAAK,KAAK,SAFtB,gCAGhCX,eAAe,CAACY,MAHgB,EAGPA,MAHO,gBAAnC;AAKA,SACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEE;AAAtB,KAA4CD,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGN,QADH,CADF;AAKD,CAlBD;;AAoBAD,UAAU,CAACU,YAAX,GAA0B;AACxBP,EAAAA,SAAS,EAAE,GADa;AAExBC,EAAAA,IAAI,EAAE,EAFkB;AAGxBC,EAAAA,KAAK,EAAE;AAHiB,CAA1B;AAMAL,UAAU,CAACW,SAAX,GAAuB;AACrB;;;AAGAV,EAAAA,QAAQ,EAAET,SAAS,CAACoB,IAJC;;AAKrB;;;;;AAKAT,EAAAA,SAAS,EAAEX,SAAS,CAACqB,SAAV,CAAoB,CAACrB,SAAS,CAACsB,MAAX,EAAmBtB,SAAS,CAACuB,IAA7B,EAAmCvB,SAAS,CAACwB,MAA7C,CAApB,CAVU;;AAWrB;;;AAGAZ,EAAAA,IAAI,EAAEZ,SAAS,CAACyB,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,OAArC,EAA8C,MAA9C,EAAsD,QAAtD,CAAhB,CAde;;AAerB;;;AAGAZ,EAAAA,KAAK,EAAEb,SAAS,CAACyB,KAAV,CAAgB,CAAC,SAAD,EAAY,QAAZ,EAAsB,MAAtB,EAA8B,OAA9B,EAAuC,SAAvC,CAAhB,CAlBc;;AAmBrB;;;AAGAX,EAAAA,MAAM,EAAEd,SAAS,CAAC0B;AAtBG,CAAvB;eAyBelB,U;;AAAf;;;;;;;;;;;;0BAvDSL,U;0BAIHK,U;;;;;;;;;;;;;;;;;0BAJGL,U;0BAIHK,U","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { typographyStyle } from '../styles/style'\n\n// 首字母大写\nfunction capitalize (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nconst Typography = ({\n  children,\n  component: Component,\n  size,\n  align,\n  noWarp,\n  ...other\n}) => {\n  const typographyStyles = classNames(typographyStyle.typographyFont, {\n    [typographyStyle[`size${capitalize(size)}`]]: size !== '',\n    [typographyStyle[`tx${capitalize(align)}`]]: align !== 'inherit',\n    [typographyStyle.noWarp]: noWarp\n  })\n  return (\n    <Component className={typographyStyles} {...other}>\n      {children}\n    </Component>\n  )\n}\n\nTypography.defaultProps = {\n  component: 'p',\n  size: '',\n  align: 'inherit'\n}\n\nTypography.propTypes = {\n  /**\n  * The content of the component.\n  */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]),\n  /**\n  * Applies the theme typography styles.\n  */\n  size: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'title', 'body', 'button']),\n  /**\n  * Set the text-align on the component.\n  */\n  align: PropTypes.oneOf(['inherit', 'center', 'left', 'right', 'justify']),\n  /**\n  * If true, the text will not wrap, but instead will truncate with an ellipsis.\n */\n  noWarp: PropTypes.bool\n}\n\nexport default Typography\n"]}]}