{"remainingRequest":"/Users/xuzihao/project/xyzUI/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/xuzihao/project/xyzUI/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[\"react-hot-loader/babel\",[\"/Users/xuzihao/project/xyzUI/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/xuzihao/project/xyzUI/node_modules/docz-core/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/xuzihao/project/xyzUI/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx","dependencies":[{"path":"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx","mtime":1541087104639},{"path":"/Users/xuzihao/project/xyzUI/node_modules/cache-loader/dist/cjs.js","mtime":1540738984603},{"path":"/Users/xuzihao/project/xyzUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xuzihao/project/xyzUI/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1537490019000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport styles from './styles/style.scss';\n\n// 首字母大写\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar Typography =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Typography, _React$PureComponent);\n\n  function Typography() {\n    _classCallCheck(this, Typography);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Typography).apply(this, arguments));\n  }\n\n  _createClass(Typography, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          Component = _this$props.component,\n          size = _this$props.size,\n          align = _this$props.align,\n          noWarp = _this$props.noWarp;\n      var typographyStyle = classNames(styles.typographyFont, (_classNames = {}, _defineProperty(_classNames, styles[\"size\".concat(capitalize(size))], size !== ''), _defineProperty(_classNames, styles[\"tx\".concat(capitalize(align))], align !== 'inherit'), _defineProperty(_classNames, styles.noWarp, noWarp), _classNames));\n      return React.createElement(Component, {\n        className: typographyStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Typography;\n}(React.PureComponent);\n\nTypography.defaultProps = {\n  component: 'span',\n  size: '',\n  align: 'inherit'\n};\nTypography.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /** Applies the theme typography styles.  */\n  size: PropTypes.oneOf(['', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'title', 'body', 'button']),\n\n  /** Set the text-align on the component. */\n  align: PropTypes.oneOf(['inherit', 'center', 'left', 'right', 'justify']),\n\n  /** If true, the text will not wrap, but instead will truncate with an ellipsis. */\n  noWarp: PropTypes.bool\n};\nvar _default = Typography;\nvar _default2 = _default;\nexport default _default2;\n\ntry {\n  // @ts-ignore\n  Typography.displayName = \"Typography\"; // @ts-ignore\n\n  Typography.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Typography\",\n    \"props\": {\n      \"children\": {\n        \"defaultValue\": null,\n        \"description\": \"The content of the component.\",\n        \"name\": \"children\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"ReactNode\"\n        }\n      },\n      \"component\": {\n        \"defaultValue\": {\n          value: \"span\"\n        },\n        \"description\": \"The element\",\n        \"name\": \"component\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string | ComponentClass<{}, any> | StatelessComponent<{}>\"\n        }\n      },\n      \"size\": {\n        \"defaultValue\": {\n          value: \"\"\n        },\n        \"description\": \"Applies the theme typography styles.\",\n        \"name\": \"size\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"\\\"\\\" | \\\"h1\\\" | \\\"h2\\\" | \\\"h3\\\" | \\\"h4\\\" | \\\"h5\\\" | \\\"h6\\\" | \\\"title\\\" | \\\"body\\\" | \\\"button\\\"\"\n        }\n      },\n      \"align\": {\n        \"defaultValue\": {\n          value: \"inherit\"\n        },\n        \"description\": \"Set the text-align on the component.\",\n        \"name\": \"align\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"\\\"inherit\\\" | \\\"center\\\" | \\\"left\\\" | \\\"right\\\" | \\\"justify\\\"\"\n        }\n      },\n      \"noWarp\": {\n        \"defaultValue\": {\n          value: \"boolean\"\n        },\n        \"description\": \"If true, the text will not wrap, but instead will truncate with an ellipsis.\",\n        \"name\": \"noWarp\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"packages/typography/src/Typography.tsx#Typography\"] = {\n      docgenInfo: Typography.__docgenInfo,\n      name: \"Typography\",\n      path: \"packages/typography/src/Typography.tsx#Typography\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(capitalize, \"capitalize\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\");\n  reactHotLoader.register(Typography, \"Typography\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\");\n  leaveModule(module);\n})();\n\n;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(capitalize, \"capitalize\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\");\n  reactHotLoader.register(Typography, \"Typography\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\");\n  reactHotLoader.register(_default2, \"default\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx"],"names":["React","classNames","PropTypes","styles","capitalize","string","charAt","toUpperCase","slice","Typography","props","children","Component","component","size","align","noWarp","typographyStyle","typographyFont","PureComponent","defaultProps","propTypes","node","isRequired","oneOf","bool","displayName","__docgenInfo","value","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AA4BA;AACA,SAASC,UAAT,CAAoBC,MAApB,EAAoC;AACnC,SAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACA;;IAEKC,U;;;;;;;;;;;;;6BA4BqB;AAAA;;AAAA,wBACuC,KAAKC,KAD5C;AAAA,UACjBC,QADiB,eACjBA,QADiB;AAAA,UACIC,SADJ,eACPC,SADO;AAAA,UACeC,IADf,eACeA,IADf;AAAA,UACqBC,KADrB,eACqBA,KADrB;AAAA,UAC4BC,MAD5B,eAC4BA,MAD5B;AAGzB,UAAMC,eAAe,GAAGhB,UAAU,CAACE,MAAM,CAACe,cAAR,kDAChCf,MAAM,eAAQC,UAAU,CAACU,IAAD,CAAlB,EAD0B,EACIA,IAAI,KAAK,EADb,gCAEhCX,MAAM,aAAMC,UAAU,CAACW,KAAD,CAAhB,EAF0B,EAEGA,KAAK,KAAK,SAFb,gCAGhCZ,MAAM,CAACa,MAHyB,EAGhBA,MAHgB,gBAAlC;AAKA,aACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAEC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwCN,QAAxC,CADF;AAGA;;;;;;;;;;;EAvCuBX,KAAK,CAACmB,a;;AAAzBV,U,CACEW,Y,GAA0C;AAChDP,EAAAA,SAAS,EAAE,MADqC;AAEhDC,EAAAA,IAAI,EAAE,EAF0C;AAGhDC,EAAAA,KAAK,EAAE;AAHyC,C;AAD5CN,U,CAOEY,S,GAAY;AAClBV,EAAAA,QAAQ,EAAET,SAAS,CAACoB,IAAV,CAAeC,UADP;;AAElB;AACAT,EAAAA,IAAI,EAAEZ,SAAS,CAACsB,KAAV,CAAgB,CACrB,EADqB,EAErB,IAFqB,EAGrB,IAHqB,EAIrB,IAJqB,EAKrB,IALqB,EAMrB,IANqB,EAOrB,IAPqB,EAQrB,OARqB,EASrB,MATqB,EAUrB,QAVqB,CAAhB,CAHY;;AAelB;AACAT,EAAAA,KAAK,EAAEb,SAAS,CAACsB,KAAV,CAAgB,CAAC,SAAD,EAAY,QAAZ,EAAsB,MAAtB,EAA8B,OAA9B,EAAuC,SAAvC,CAAhB,CAhBW;;AAiBlB;AACAR,EAAAA,MAAM,EAAEd,SAAS,CAACuB;AAlBA,C;eAmCLhB,U;;AAAf;;AACA,IAAI;AACA;AACAA,EAAAA,UAAU,CAACiB,WAAX,GAAyB,YAAzB,CAFA,CAGA;;AACAjB,EAAAA,UAAU,CAACkB,YAAX,GAA0B;AAAE,mBAAe,EAAjB;AAAqB,mBAAe,YAApC;AAAkD,aAAS;AAAE,kBAAY;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,+BAAvC;AAAwE,gBAAQ,UAAhF;AAA4F,oBAAY,IAAxG;AAA8G,gBAAQ;AAAE,kBAAQ;AAAV;AAAtH,OAAd;AAA+J,mBAAa;AAAE,wBAAgB;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAlB;AAAqC,uBAAe,aAApD;AAAmE,gBAAQ,WAA3E;AAAwF,oBAAY,KAApG;AAA2G,gBAAQ;AAAE,kBAAQ;AAAV;AAAnH,OAA5K;AAA0W,cAAQ;AAAE,wBAAgB;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAlB;AAAiC,uBAAe,sCAAhD;AAAwF,gBAAQ,MAAhG;AAAwG,oBAAY,KAApH;AAA2H,gBAAQ;AAAE,kBAAQ;AAAV;AAAnI,OAAlX;AAAqmB,eAAS;AAAE,wBAAgB;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAlB;AAAwC,uBAAe,sCAAvD;AAA+F,gBAAQ,OAAvG;AAAgH,oBAAY,KAA5H;AAAmI,gBAAQ;AAAE,kBAAQ;AAAV;AAA3I,OAA9mB;AAAw0B,gBAAU;AAAE,wBAAgB;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAlB;AAAwC,uBAAe,8EAAvD;AAAuI,gBAAQ,QAA/I;AAAyJ,oBAAY,KAArK;AAA4K,gBAAQ;AAAE,kBAAQ;AAAV;AAApL;AAAl1B;AAA3D,GAA1B,CAJA,CAKA;;AACA,MAAI,OAAOC,uBAAP,KAAmC,WAAvC,EACI;AACAA,IAAAA,uBAAuB,CAAC,mDAAD,CAAvB,GAA+E;AAAEC,MAAAA,UAAU,EAAErB,UAAU,CAACkB,YAAzB;AAAuCI,MAAAA,IAAI,EAAE,YAA7C;AAA2DC,MAAAA,IAAI,EAAE;AAAjE,KAA/E;AACP,CATD,CAUA,OAAOC,sCAAP,EAA+C,CAAG;;;;;;;;;;;;;0BAzDzC7B,U;0BAIHK,U;;;;;;;;;;;;;;;;;0BAJGL,U;0BAIHK,U","sourcesContent":["import * as React from 'react'\nimport classNames from 'classnames'\nimport * as PropTypes from 'prop-types'\nimport styles from './styles/style.scss'\n\ninterface ITypographyProps {\n\t/**\n\t * The content of the component.\n\t */\n\tchildren: React.ReactNode;\n\t/**\n\t * The element\n\t */\n\tcomponent?: string | React.ComponentType;\n\t/**\n\t * Applies the theme typography styles.\n\t * @default ''\n\t */\n\tsize?: '' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'title' | 'body' | 'button';\n\t/**\n\t * Set the text-align on the component.\n\t * @default inherit\n\t */\n\talign?: 'inherit' | 'center' | 'left' | 'right' | 'justify';\n\t/**\n\t * If true, the text will not wrap, but instead will truncate with an ellipsis.\n\t * @default boolean\n\t */\n\tnoWarp?: boolean;\n}\n\n// 首字母大写\nfunction capitalize(string: string) {\n\treturn string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nclass Typography extends React.PureComponent<ITypographyProps, {}> {\n\tstatic defaultProps: Partial<ITypographyProps> = {\n\t\tcomponent: 'span',\n\t\tsize: '',\n\t\talign: 'inherit'\n\t}\n\n\tstatic propTypes = {\n\t\tchildren: PropTypes.node.isRequired,\n\t\t/** Applies the theme typography styles.  */\n\t\tsize: PropTypes.oneOf([\n\t\t\t'',\n\t\t\t'h1',\n\t\t\t'h2',\n\t\t\t'h3',\n\t\t\t'h4',\n\t\t\t'h5',\n\t\t\t'h6',\n\t\t\t'title',\n\t\t\t'body',\n\t\t\t'button',\n\t\t]),\n\t\t/** Set the text-align on the component. */\n\t\talign: PropTypes.oneOf(['inherit', 'center', 'left', 'right', 'justify']),\n\t\t/** If true, the text will not wrap, but instead will truncate with an ellipsis. */\n\t\tnoWarp: PropTypes.bool,\n\t}\n\n\trender(): React.ReactNode {\n\t\tconst { children, component: Component, size, align, noWarp } = this.props\n\n\t\tconst typographyStyle = classNames(styles.typographyFont, {\n\t\t\t[styles[`size${capitalize(size)}`]]: size !== '',\n\t\t\t[styles[`tx${capitalize(align)}`]]: align !== 'inherit',\n\t\t\t[styles.noWarp]: noWarp,\n\t\t})\n\t\treturn (\n\t\t\t\t<Component className={typographyStyle}>{children}</Component>\n\t\t)\n\t}\n}\n\nexport default Typography\ntry {\n    // @ts-ignore\n    Typography.displayName = \"Typography\";\n    // @ts-ignore\n    Typography.__docgenInfo = { \"description\": \"\", \"displayName\": \"Typography\", \"props\": { \"children\": { \"defaultValue\": null, \"description\": \"The content of the component.\", \"name\": \"children\", \"required\": true, \"type\": { \"name\": \"ReactNode\" } }, \"component\": { \"defaultValue\": { value: \"span\" }, \"description\": \"The element\", \"name\": \"component\", \"required\": false, \"type\": { \"name\": \"string | ComponentClass<{}, any> | StatelessComponent<{}>\" } }, \"size\": { \"defaultValue\": { value: \"\" }, \"description\": \"Applies the theme typography styles.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"\\\" | \\\"h1\\\" | \\\"h2\\\" | \\\"h3\\\" | \\\"h4\\\" | \\\"h5\\\" | \\\"h6\\\" | \\\"title\\\" | \\\"body\\\" | \\\"button\\\"\" } }, \"align\": { \"defaultValue\": { value: \"inherit\" }, \"description\": \"Set the text-align on the component.\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"\\\"inherit\\\" | \\\"center\\\" | \\\"left\\\" | \\\"right\\\" | \\\"justify\\\"\" } }, \"noWarp\": { \"defaultValue\": { value: \"boolean\" }, \"description\": \"If true, the text will not wrap, but instead will truncate with an ellipsis.\", \"name\": \"noWarp\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"packages/typography/src/Typography.tsx#Typography\"] = { docgenInfo: Typography.__docgenInfo, name: \"Typography\", path: \"packages/typography/src/Typography.tsx#Typography\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]}]}