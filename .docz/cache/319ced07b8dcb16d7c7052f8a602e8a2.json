{"remainingRequest":"/Users/xuzihao/project/xyzUI/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/xuzihao/project/xyzUI/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[\"react-hot-loader/babel\",[\"/Users/xuzihao/project/xyzUI/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/xuzihao/project/xyzUI/node_modules/docz-core/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/xuzihao/project/xyzUI/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx","dependencies":[{"path":"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx","mtime":1540738761340},{"path":"/Users/xuzihao/project/xyzUI/node_modules/cache-loader/dist/cjs.js","mtime":1540738984603},{"path":"/Users/xuzihao/project/xyzUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xuzihao/project/xyzUI/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1537490019000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport styles from './styles/style.scss';\n\n// 首字母大写\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar Typography = function Typography(props) {\n  var _classNames;\n\n  var children = props.children,\n      size = props.size,\n      align = props.align,\n      noWarp = props.noWarp;\n  var typographyStyle = classNames(styles.typographyFont, (_classNames = {}, _defineProperty(_classNames, styles[\"size\".concat(capitalize(size))], size !== ''), _defineProperty(_classNames, styles[\"tx\".concat(capitalize(align))], align !== 'inherit'), _defineProperty(_classNames, styles.noWarp, noWarp), _classNames));\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: typographyStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, children));\n};\n\nTypography.propTypes = {\n  /** The content of the component. */\n  children: PropTypes.node.isRequired,\n\n  /** Applies the theme typography styles.  */\n  size: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'title', 'body', 'button']),\n\n  /** Set the text-align on the component. */\n  align: PropTypes.oneOf(['inherit', 'center', 'left', 'right', 'justify']),\n\n  /** If true, the text will not wrap, but instead will truncate with an ellipsis. */\n  noWarp: PropTypes.bool\n};\nTypography.defaultProps = {\n  size: '',\n  align: 'inherit',\n  noWarp: false\n};\nvar _default = Typography;\nvar _default2 = _default;\nexport default _default2;\n\ntry {\n  // @ts-ignore\n  Typography.displayName = \"Typography\"; // @ts-ignore\n\n  Typography.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Typography\",\n    \"props\": {\n      \"size\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"size\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"align\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"align\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"noWarp\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"noWarp\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"packages/typography/src/Typography.tsx#Typography\"] = {\n      docgenInfo: Typography.__docgenInfo,\n      name: \"Typography\",\n      path: \"packages/typography/src/Typography.tsx#Typography\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(capitalize, \"capitalize\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\");\n  reactHotLoader.register(Typography, \"Typography\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\");\n  leaveModule(module);\n})();\n\n;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(capitalize, \"capitalize\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\");\n  reactHotLoader.register(Typography, \"Typography\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\");\n  reactHotLoader.register(_default2, \"default\", \"/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/xuzihao/project/xyzUI/packages/typography/src/Typography.tsx"],"names":["React","classNames","PropTypes","styles","capitalize","string","charAt","toUpperCase","slice","Typography","props","children","size","align","noWarp","typographyStyle","typographyFont","propTypes","node","isRequired","oneOf","bool","defaultProps","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport classNames from 'classnames'\nimport * as PropTypes from 'prop-types'\nimport styles from './styles/style.scss'\n\ninterface ITypographyProps {\n\tchildren: React.ReactNode,\n\tsize: string,\n\talign: string,\n\tnoWarp: boolean\n}\n\n// 首字母大写\nfunction capitalize(string: string) {\n\treturn string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nconst Typography: React.SFC<ITypographyProps> = (props) => {\n\tconst {\n\t\tchildren, size, align, noWarp\n\t} = props\n\n\tconst typographyStyle = classNames(styles.typographyFont, {\n\t\t[styles[`size${capitalize(size)}`]]: size !== '',\n\t\t[styles[`tx${capitalize(align)}`]]: align !== 'inherit',\n\t\t[styles.noWarp]: noWarp,\n\t})\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<span className={typographyStyle}>{children}</span>\n\t\t</React.Fragment>\n\t)\n}\n\nTypography.propTypes = {\n\t/** The content of the component. */\n\tchildren: PropTypes.node.isRequired,\n\t/** Applies the theme typography styles.  */\n\tsize: PropTypes.oneOf([\n\t\t'h1',\n\t\t'h2',\n\t\t'h3',\n\t\t'h4',\n\t\t'h5',\n\t\t'h6',\n\t\t'title',\n\t\t'body',\n\t\t'button'\n\t]),\n\t/** Set the text-align on the component. */\n\talign: PropTypes.oneOf(['inherit', 'center', 'left', 'right', 'justify']),\n\t/** If true, the text will not wrap, but instead will truncate with an ellipsis. */\n\tnoWarp: PropTypes.bool,\n}\n\nTypography.defaultProps = {\n\tsize: '',\n\talign: 'inherit',\n\tnoWarp: false,\n}\n\nexport default Typography\ntry {\n    // @ts-ignore\n    Typography.displayName = \"Typography\";\n    // @ts-ignore\n    Typography.__docgenInfo = { \"description\": \"\", \"displayName\": \"Typography\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"noWarp\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"noWarp\", \"required\": true, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"packages/typography/src/Typography.tsx#Typography\"] = { docgenInfo: Typography.__docgenInfo, name: \"Typography\", path: \"packages/typography/src/Typography.tsx#Typography\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]}]}